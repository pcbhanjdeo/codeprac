1) an array is a constant pointer.
2) an array when sent to a function ends up being a pointer, that process is called decay.
3) array has no knowledge of its size, so it is easy to go out of bounds.
4) an intizer array can be passed as an int* or int [].


-------------------------------------------------------------------------------------------------------------------------

1) how to find the size of an array ?
ans)   we use the sizeof() operator to find the size of an array, and then we divide it by size of a single element in an array.
   eg:

   int a[3] = {1,2,3};
   size_t arrsize = sizeof(a) / sizeof(a[0]) 
   
   example code: test1.cpp
   
----------------------------------------------------------------------------------------------------------------------------

2) what are the various ways of initializing an array ?
ans)

  method 1:
  int a[5] = {};
  int a[] = {1,2,3,4,5}
  int a[10]
  
------------------------------------------------------------------------------------------------------------------------------

3) if we create an array of a definite size, keep it empty and use sizeof() operator to get its size will it work ?
   eg code:

   int a[100];
   int arrsize = sizeof(a) / sizeof(a[0]) ;
 
   will arrsize value = 100 ??

ans) it does
     
     ex code: test2.cpp

---------------------------------------------------------------------------------------------------------------------------------


