
 to replace the old reprehensible c-casts, C++ introduced 4 types of casts.

1) const cast:
    This is used to strip a variable of its constness, using a const cast we can assign a const pointer to a regular one and 
    change the object.

    it will only change a pointer of type int const * to int *, it will not change char* to int* like c style cast would have done.

    int a = 10;
    int const* p = &a;

    *p = 11; // error

     int* q = const_cast<int *> (p);
     (*q)++;  //not an error.

    check test1.cpp

----------------------------------------------------------------------------------------------------------------------------------------

2) can a const object be edited using const cast ?

   eg:

   const int a = 10;
   int const* p = &a;

   int* q = const_cast <int *> p;

   (*q)++;

   cout << " a = " << endl;

   what will be the out put of above code ? and why ?

  o.,b
    
    

